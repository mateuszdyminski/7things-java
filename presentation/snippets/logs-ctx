@PreMatching
public class LoggingFilterWithCtx implements ContainerRequestFilter, ContainerResponseFilter {
    private static Logger logger = LogManager.getLogger(LoggingFilter.class);

    @Inject
    private Provider<Request> request;

    @Override
    public void filter(ContainerRequestContext requestContext) throws IOException {
        ThreadContext.put("requestId", UUID.randomUUID().toString()); // HL
        ThreadContext.put("requestIp", request.get().getRemoteAddr()); // HL
        logger.info("HTTP REQUEST: {} /{}  Headers: {}",
                requestContext.getMethod(), requestContext.getUriInfo().getPath(),
                requestContext.getHeaders());
    }

    @Override
    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext) throws IOException {
        logger.info("HTTP RESPONSE: {} /{}  Status: {}",
                requestContext.getMethod(), requestContext.getUriInfo().getPath(),
                responseContext.getStatus());
        ThreadContext.remove("requestId"); // HL
        ThreadContext.remove("requestIp"); // HL
    }
}